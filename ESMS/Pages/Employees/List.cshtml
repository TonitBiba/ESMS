@page
@model ESMS.Pages.Employees.ListModel
@using System.Security.Claims
@using ESMS.Security

@{
    ViewData["Title"] = Resource.listaPunetorve;
}
<div class="card">
    <div class="card-body card-block">
        <h4>@Resource.listaPunetorve</h4>
        <hr />
        <div class="btn-group float-right">
            <button type="button" class="btn btn-secondary dropdown-toggle w-100" data-toggle="dropdown">@Resource.downloadList</button>
            <div class="dropdown-menu">
                <a href='List?handler=Users&f=1' target="_blank" class="dropdown-item btn btn-secondary"><i class="far fa-file-pdf"></i>&nbsp; PDF</a>
                <a href='List?handler=Users&f=2' target="_blank" class="dropdown-item"><i class="far fa-file-excel"></i>&nbsp; Excel</a>
                <a href='List?handler=Users&f=3' target="_blank" class="dropdown-item"><i class="far fa-file-word"></i>&nbsp; Word</a>
            </div>
        </div>
        @Html.AntiForgeryToken()
        <table id="tblListEmployees" class="table table-striped table-bordered" style="width:100%">
            <thead>
                <tr>
                    <th>@Resource.emri</th>
                    <th>@Resource.mbiemri</th>
                    <th>@Resource.gjinia</th>
                    <th>@Resource.ditelindja</th>
                    <th>@Resource.pozitaPunes</th>
                    <th>@Resource.email</th>
                    <th>@Resource.nrTel</th>
                    <th>@Resource.ditaPunesimit</th>
                    <th>@Resource.dataPunesimitDeri</th>
                    <th>@Resource.paga</th>
                    <th>@Resource.statusi</th>
                    <th>@Resource.veprimet</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.employees)
                {
                    <tr>
                        <td>@item.FirstName</td>
                        <td>@item.LastName</td>
                        <td>@item.Gender</td>
                        <td>@item.Birthdate.ToString("dd/MM/yyyy")</td>
                        <td>@item.Role</td>
                        <td>@item.Email</td>
                        <td>@item.PhoneNumber</td>
                        <td>@item.DtFrom.ToString("dd/MM/yyyy")</td>
                        <td>@item.DtTo.ToString("dd/MM/yyyy")</td>
                        <td>@string.Concat(item.Salary," €")</td>
                        <td>@item.statusEmployee</td>
                        <td>
                            <div class="btn-group w-100">
                                <button type="button" class="btn btn-secondary dropdown-toggle w-100" data-toggle="dropdown">@Resource.veprimet</button>
                                <div class="dropdown-menu">
                                    <button onclick="EditEmployee('@Confidenciality.EncryptString(item.UserId)')" class="dropdown-item btn btn-secondary"><i class="far fa-edit"></i>&nbsp; @Resource.ndrysho</button>
                                    @if (User.HasClaim("Employ:delete", "1"))
                                    {
                                        <div class="dropdown-divider"></div>
                                        <button class="dropdown-item" onclick="DeleteEmploye('@Confidenciality.EncryptString(item.UserId)')"><i class="far fa-trash-alt"></i>&nbsp; @Resource.fshije</button>
                                    }

                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<script>
    $(document).ready(function () {
        $('#tblListEmployees').DataTable({
            "language": {
                "lengthMenu": "@Resource.dtlengthMenu",
                "zeroRecords": "@Resource.dtZeroRecord",
                "info": "@Resource.dtInfo",
                "infoEmpty": "@Resource.dtInfoEmpty",
                "infoFiltered": "@Resource.dtInfoFiltered",
                "search": "@Resource.dtSearch",
                "paginate": {
                    "previous": "@Resource.dtPrapa",
                    "first": "@Resource.dtFirst",
                    "last": "@Resource.dtLast",
                    "next": "@Resource.dtNext"
                }
            },
            responsive:true
        });
    })

    function EditEmployee(UEnc) {
        Loading()
        window.location.href = '@Url.Page("Edit")?UIEnc='+UEnc
    }

    function DeleteEmploye(UEnc) {
        Swal.fire({
          title: '@Resource.warning',
          text: "@Html.Raw(Resource.employeeDeleteMsg)",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          cancelButtonText: "@Resource.cancel",
            confirmButtonText: '@Resource.yesDelete'
        }).then((result) => {
            if (result.value) {
                Loading()
                $.ajax({
                    url: '@Url.Page("List", "Delete")',
                    method: 'POST',
                    data: {
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(),
                        UEnc: UEnc
                    },
                    dataType: "json",
                    success: function (response) {
                        if (response.nError == 1) {
                            Swal.fire({
                                icon: 'success',
                                title: '@Resource.success',
                                text: '@Html.Raw(Resource.msgRuajtjaSukses)',
                                showConfirmButton: false,
                                timer: 2500
                            }).then(() => {
                                window.location.reload();
                            })
                        } else {
                            Swal.fire({
                              icon: 'error',
                              title: '@Resource.error',
                              text:response.errorDescription,
                                confirmButtonText:'@Html.Raw(Resource.neRregull)'
                            }).then(() => {
                                window.location.reload()
                            })
                        }
                    },
                    complete: function () {
                        HideLoading()
                    }
                })
          }
        })
    }

</script>

@if (Model.error != null)
{
    <script>
        $(document).ready(function (){
            showAlert(@Model.error.nError, '@Html.Raw(Model.error.ErrorDescription)')
        })
    </script>
}
